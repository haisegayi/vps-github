name: RDP Mobile Optimized

on:
  workflow_dispatch:

env:
  FIXED_IP: "100.64.0.1"  # IP c·ªë ƒë·ªãnh
  FIXED_PASSWORD: "Mobile@1234"  # Password c·ªë ƒë·ªãnh
  TAILSCALE_AUTHKEY: "tskey-auth-xxxxx"  # Thay th·∫ø b·∫±ng auth key th·∫≠t

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Parallel Setup - Fast Optimization
        run: |
          # Ch·∫°y song song c√°c t√°c v·ª• ƒë·ªÉ tƒÉng t·ªëc
          $jobs = @()
          
          # Job 1: RDP Registry Optimization
          $jobs += Start-Job -ScriptBlock {
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
          }
          
          # Job 2: Performance Settings
          $jobs += Start-Job -ScriptBlock {
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MaxMonitors" -Value 4 -Force
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MaxXResolution" -Value 1920 -Force
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MaxYResolution" -Value 1080 -Force
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MaxColorDepth" -Value 16 -Force
          }
          
          # Job 3: Network Optimization
          $jobs += Start-Job -ScriptBlock {
            Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters' -Name "Tcp1323Opts" -Value 1 -Force
            Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters' -Name "TCPWindowSize" -Value 64240 -Force
          }
          
          # Ch·ªù t·∫•t c·∫£ job ho√†n th√†nh
          $jobs | Wait-Job | Receive-Job
          
          # Firewall config
          netsh advfirewall firewall delete rule name="RDP" 2>$null
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389
          
          Restart-Service -Name TermService -Force

      - name: Fast User Creation
        run: |
          $securePass = ConvertTo-SecureString $env:FIXED_PASSWORD -AsPlainText -Force
          
          # X√≥a user c≈© n·∫øu t·ªìn t·∫°i (ƒë·ªÉ tr√°nh l·ªói)
          $existingUser = Get-LocalUser -Name "MobileUser" -ErrorAction SilentlyContinue
          if ($existingUser) {
              Remove-LocalUser -Name "MobileUser"
          }
          
          New-LocalUser -Name "MobileUser" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "MobileUser"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "MobileUser"
          
          "RDP_USER=MobileUser" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Quick Tailscale Install & Setup
        run: |
          # T·∫£i v√† c√†i ƒë·∫∑t Tailscale nhanh
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          
          # T·∫£i xu·ªëng v·ªõi timeout ng·∫Øn
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath -TimeoutSec 30
          
          # C√†i ƒë·∫∑t kh√¥ng ch·ªù ƒë·ª£i
          Start-Process msiexec.exe -ArgumentList "/i", "$installerPath", "/quiet", "/norestart" -NoNewWindow -Wait
          Remove-Item $installerPath -Force
          
          # Ch·ªù ng·∫Øn ƒë·ªÉ service kh·ªüi ƒë·ªông
          Start-Sleep -Seconds 3

      - name: One-Click Tailscale Authentication
        run: |
          # S·ª≠ d·ª•ng auth key ƒë·ªÉ k·∫øt n·ªëi ngay l·∫≠p t·ª©c
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=$env:TAILSCALE_AUTHKEY --hostname=rdp-mobile --accept-routes --accept-dns=false
          
          # ƒê·∫∑t IP c·ªë ƒë·ªãnh v√†o bi·∫øn m√¥i tr∆∞·ªùng
          "TAILSCALE_IP=$env:FIXED_IP" | Out-File -FilePath $env:GITHUB_ENV -Append
          
          Write-Host "‚úÖ Tailscale connected with fixed IP: $env:FIXED_IP"

      - name: Quick Performance Tweaks
        run: |
          # T·ªëi ∆∞u nhanh - ch·ªâ nh·ªØng th·ª© quan tr·ªçng nh·∫•t
          Get-Service -Name "SysMain" | Stop-Service -Force -ErrorAction SilentlyContinue
          powercfg /setactive 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c
          
          Write-Host "‚úÖ Quick performance optimizations applied"

      - name: Generate Permanent Connection Link
        run: |
          # T·∫°o link k·∫øt n·ªëi c·ªë ƒë·ªãnh
          $connectionInfo = @"
==========================================
üöÄ OPTIMIZED MOBILE RDP - FAST SETUP
==========================================
üì° PERMANENT CONNECTION:
IP: $env:FIXED_IP
User: MobileUser
Password: $env:FIXED_PASSWORD

üîó QUICK CONNECT LINK:
rdp://full%20address=s:$env:FIXED_IP&username=s:MobileUser&screen%20mode%20id=i:2&use%20multimon=i:0&desktopwidth=i:1280&desktopheight=i:720&session%20bpp=i:16&compression=i:1&keyboardhook=i:2&audiocapturemode=i:0&videoplaybackmode=i:1&connection%20type=i:7&networkautodetect=i:1&bandwidthautodetect=i:1&displayconnectionbar=i:1&enableworkspacereconnect=i:0&disable%20wallpaper=i:1&allow%20font%20smoothing=i:0&allow%20desktop%20composition=i:0&disable%20full%20window%20drag=i:1&disable%20menu%20animations=i:1&disable%20themes=i:0&disable%20cursor%20setting=i:0&bitmapcachepersistenable=i:0

üì± MOBILE SETTINGS:
1. Security Layer: OFF
2. Color: 16-bit
3. Resolution: 1280x720
4. Compression: ON
==========================================
"@
          Write-Host $connectionInfo
          
          # L∆∞u th√¥ng tin k·∫øt n·ªëi
          Set-Content -Path "$env:GITHUB_WORKSPACE\connection_info.txt" -Value $connectionInfo

      - name: Fast Monitoring
        run: |
          Write-Host "üü¢ RDP Session Ready - Monitoring..."
          $counter = 0
          while ($true) {
            $counter++
            
            # Log ƒë∆°n gi·∫£n, √≠t t·ªën t√†i nguy√™n
            if ($counter % 10 -eq 0) {
              Write-Host "[$(Get-Date -Format 'HH:mm:ss')] Active - $counter minutes | IP: $env:FIXED_IP"
            }
            
            Start-Sleep -Seconds 60
          }
