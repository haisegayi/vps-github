name: RDP Mobile Optimized

on:
  workflow_dispatch:

env:
  FIXED_PASSWORD: "Mobile@1234"

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Clean Previous Session
        run: |
          Write-Host "üßπ Cleaning previous session..."
          Get-Process "tailscale*" -ErrorAction SilentlyContinue | Stop-Process -Force
          Start-Sleep -Seconds 2

      - name: Ultra Fast RDP Setup
        run: |
          Write-Host "‚ö° Configuring RDP..."
          reg add "HKLM\System\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
          reg add "HKLM\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v UserAuthentication /t REG_DWORD /d 0 /f
          reg add "HKLM\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v SecurityLayer /t REG_DWORD /d 0 /f
          reg add "HKLM\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v MaxColorDepth /t REG_DWORD /d 16 /f
          
          netsh advfirewall firewall delete rule name="RDP" 2>$null
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389
          
          net stop TermService /y
          net start TermService

      - name: Create User
        run: |
          Write-Host "üë§ Creating user..."
          net user MobileUser /delete 2>$null
          net user MobileUser "$env:FIXED_PASSWORD" /add /y /expires:never
          net localgroup administrators MobileUser /add
          net localgroup "Remote Desktop Users" MobileUser /add

      - name: Install Tailscale
        run: |
          Write-Host "üì• Installing Tailscale..."
          if (Test-Path "$env:ProgramFiles\Tailscale\tailscale.exe") {
            Write-Host "‚úÖ Tailscale already installed"
          } else {
            $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
            $installerPath = "$env:TEMP\tailscale.msi"
            Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
            Start-Process msiexec.exe -ArgumentList "/i", "$installerPath", "/quiet", "/norestart" -Wait
            Remove-Item $installerPath -Force
            Write-Host "‚úÖ Tailscale installed"
          }
          Start-Sleep -Seconds 5

      - name: Configure Tailscale
        run: |
          Write-Host "üîó Configuring Tailscale..."
          Start-Service "Tailscale" -ErrorAction SilentlyContinue
          Start-Sleep -Seconds 3
          
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --login-server=https://login.tailscale.com --accept-routes --hostname=rdp-$env:GITHUB_RUN_ID
          
          Write-Host "‚úÖ Tailscale connection initiated"
          
          $tsIP = $null
          for ($i = 0; $i -lt 15; $i++) {
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 2>$null
            if ($tsIP) { 
              Write-Host "üéØ Tailscale IP: $tsIP"
              "TAILSCALE_IP=$tsIP" | Out-File -FilePath $env:GITHUB_ENV -Append
              break 
            }
            Write-Host "‚è≥ Waiting for IP... ($i/15)"
            Start-Sleep -Seconds 2
          }
          
          if (-not $tsIP) {
            Write-Host "‚ö†Ô∏è Could not get Tailscale IP, but continuing..."
            "TAILSCALE_APE=unknown" | Out-File -FilePath $env:GITHUB_ENV -Append
          }

      - name: Performance Optimization
        run: |
          Write-Host "üöÄ Optimizing performance..."
          # S·ª≠a l·ªói: D√πng powercfg v·ªõi error handling
          powercfg /setactive 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c 2>$null
          # T·∫Øt service an to√†n h∆°n
          sc stop "SysMain" 2>$null
          sc config "SysMain" start= disabled 2>$null
          Write-Host "‚úÖ Performance optimized successfully"

      - name: Display Connection Info
        run: |
          $finalIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 2>$null
          if (-not $finalIP) { $finalIP = "100.65.56.128" }  # Fallback to previous IP
          
          Write-Host ""
          Write-Host "=========================================="
          Write-Host "üöÄ RDP READY - CONNECT NOW"
          Write-Host "=========================================="
          Write-Host "üìç IP Address: $finalIP"
          Write-Host "üë§ Username: MobileUser"
          Write-Host "üîë Password: $env:FIXED_PASSWORD"
          Write-Host ""
          Write-Host "üì± CONNECTION GUIDE:"
          Write-Host "1. Open Remote Desktop Connection"
          Write-Host "2. Enter: $finalIP"
          Write-Host "3. Username: MobileUser"
          Write-Host "4. Password: $env:FIXED_PASSWORD"
          Write-Host ""
          Write-Host "‚úÖ All services running - Ready for connection!"
          Write-Host "=========================================="

      - name: Monitoring
        run: |
          Write-Host "üìä Starting monitoring..."
          $counter = 0
          
          while ($true) {
            $counter++
            $currentIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 2>$null
            
            if ($counter % 10 -eq 0) {
              if ($currentIP) {
                Write-Host "[$(Get-Date -Format 'HH:mm:ss')] ‚úÖ Active - $counter minutes | IP: $currentIP"
              } else {
                Write-Host "[$(Get-Date -Format 'HH:mm:ss')] ‚ö†Ô∏è Active - $counter minutes | IP: Waiting..."
              }
            }
            
            Start-Sleep -Seconds 60
          }
