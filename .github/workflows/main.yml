name: RDP

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        run: |
          # Enable Remote Desktop
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
          
          # Configure firewall
          netsh advfirewall firewall delete rule name="RDP-Tailscale" 2>$null
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389
          
          # Restart Terminal Service
          Restart-Service -Name TermService -Force

      - name: Create RDP User with Secure Password
        run: |
          # Password generation
          $charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%'
          $password = -join ((1..12) | ForEach-Object { $charSet[(Get-Random -Maximum $charSet.Length)] })
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          
          # Create user
          New-LocalUser -Name "RDPUser" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDPUser"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDPUser"
          
          # Set environment variables
          "RDP_USER=RDPUser" | Out-File -FilePath $env:GITHUB_ENV -Append
          "RDP_PASSWORD=$password" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "$installerPath", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force
          Start-Sleep -Seconds 5

      - name: Establish Tailscale Connection
        run: |
          # Start Tailscale with login instead of authkey
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --login-server=https://login.tailscale.com --accept-routes=true --hostname=github-rdp-$env:GITHUB_RUN_ID
          
          # Get login URL
          $loginUrl = & "$env:ProgramFiles\Tailscale\tailscale.exe" up --login-server=https://login.tailscale.com --accept-routes=true --hostname=github-rdp-$env:GITHUB_RUN_ID --qr 2>&1 | Select-String "https://"
          
          if ($loginUrl) {
            Write-Host "TAILSCALE_LOGIN_URL=$loginUrl" | Out-File -FilePath $env:GITHUB_ENV -Append
            Write-Host "Login URL: $loginUrl"
          }
          
          # Wait for connection
          $tsIP = $null
          for ($i = 0; $i -lt 20; $i++) {
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 2>$null
            if ($tsIP) { break }
            Start-Sleep -Seconds 5
          }
          
          if ($tsIP) {
            "TAILSCALE_IP=$tsIP" | Out-File -FilePath $env:GITHUB_ENV -Append
            Write-Host "Tailscale IP: $tsIP"
          } else {
            Write-Host "Waiting for manual authentication..."
            Write-Host "Please visit: https://login.tailscale.com/admin/machines to authenticate this device"
          }

      - name: Display Connection Info
        run: |
          Write-Host "=========================================="
          Write-Host "RDP CONNECTION INFORMATION"
          Write-Host "=========================================="
          Write-Host "To connect via Tailscale:"
          Write-Host "1. Go to: https://login.tailscale.com/admin/machines"
          Write-Host "2. Look for device: github-rdp-$env:GITHUB_RUN_ID"
          Write-Host "3. Authorize the device if needed"
          Write-Host "4. Use the Tailscale IP below to connect"
          Write-Host ""
          Write-Host "IP Address: $env:TAILSCALE_IP"
          Write-Host "Username: $env:RDP_USER"
          Write-Host "Password: $env:RDP_PASSWORD"
          Write-Host ""
          Write-Host "If no IP shown, check Tailscale admin panel"
          Write-Host "=========================================="

      - name: Maintain Connection
        run: |
          $counter = 0
          while ($true) {
            $counter++
            $currentTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
            
            # Get current Tailscale status
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 2>$null
            $status = if ($tsIP) { "CONNECTED - IP: $tsIP" } else { "PENDING AUTH - Check https://login.tailscale.com" }
            
            Write-Host "[$currentTime] RDP Session Active - Status: $status - Duration: $counter minutes"
            
            # Display connection info every 5 minutes
            if ($counter % 5 -eq 0) {
              Write-Host "--- Connection Info ---"
              Write-Host "Username: $env:RDP_USER"
              Write-Host "Password: $env:RDP_PASSWORD"
              Write-Host "Tailscale IP: $tsIP"
              Write-Host "Admin Panel: https://login.tailscale.com/admin/machines"
              Write-Host "-----------------------"
            }
            
            Start-Sleep -Seconds 60
          }
