name: RDP Mobile Optimized

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Optimize Windows for RDP
        run: |
          # T·ªëi ∆∞u h·ªá th·ªëng cho RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
          
          # T·ªëi ∆∞u hi·ªáu su·∫•t RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MaxMonitors" -Value 4 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MaxXResolution" -Value 1920 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MaxYResolution" -Value 1080 -Force
          
          # Gi·∫£m ch·∫•t l∆∞·ª£ng h√¨nh ·∫£nh ƒë·ªÉ tƒÉng t·ªëc ƒë·ªô
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MaxColorDepth" -Value 16 -Force
          
          # T·ªëi ∆∞u network
          Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters' -Name "Tcp1323Opts" -Value 1 -Force
          Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters' -Name "TCPWindowSize" -Value 64240 -Force
          
          # S·ª≠a l·ªói firewall - th√™m x√≥a rule c≈© tr∆∞·ªõc
          netsh advfirewall firewall delete rule name="RDP" 2>$null
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389
          
          Restart-Service -Name TermService -Force

      - name: Create Optimized User
        run: |
          $password = "Mobile@" + (Get-Random -Minimum 1000 -Maximum 9999)
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          
          New-LocalUser -Name "MobileUser" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "MobileUser"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "MobileUser"
          
          "RDP_USER=MobileUser" | Out-File -FilePath $env:GITHUB_ENV -Append
          "RDP_PASSWORD=$password" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Install Tailscale with Optimizations
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "$installerPath", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force
          Start-Sleep -Seconds 5

      - name: Configure Tailscale for Low Latency
        run: |
          # C·∫•u h√¨nh Tailscale cho t·ªëc ƒë·ªô t·ªët nh·∫•t
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --login-server=https://login.tailscale.com --accept-routes --hostname=fast-rdp-$env:GITHUB_RUN_ID
          
          # ƒê·ª£i k·∫øt n·ªëi - S·ª¨A L·ªñI SYNTAX ·ªû ƒê√ÇY
          $tsIP = $null
          for ($i = 0; $i -lt 20; $i++) {
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 2>$null
            if ($tsIP) { 
              "TAILSCALE_IP=$tsIP" | Out-File -FilePath $env:GITHUB_ENV -Append
              break 
            }
            Start-Sleep -Seconds 2  # ƒê√É X√ìA D·∫§U ) TH·ª™A
          }

      - name: Apply Performance Tweaks
        run: |
          # Gi·∫£m t·∫£i h·ªá th·ªëng
          Get-Service -Name "SysMain" | Stop-Service -Force -ErrorAction SilentlyContinue
          Set-Service -Name "SysMain" -StartupType Disabled -ErrorAction SilentlyContinue
          
          # T·∫Øt visual effects ƒë·ªÉ tƒÉng performance
          Set-ItemProperty -Path 'HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\VisualEffects' -Name "VisualFXSetting" -Value 2 -Force
          
          # T·ªëi ∆∞u power plan cho performance
          powercfg /setactive 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c  # High performance
          
          Write-Host "Performance optimizations applied"

      - name: Display Optimized Connection Info
        run: |
          Write-Host "=========================================="
          Write-Host "üöÄ OPTIMIZED MOBILE RDP - LOW LAG"
          Write-Host "=========================================="
          Write-Host "IP: $env:TAILSCALE_IP"
          Write-Host "User: $env:RDP_USER"
          Write-Host "Pass: $env:RDP_PASSWORD"
          Write-Host ""
          Write-Host "üì± MOBILE SETTINGS FOR BEST PERFORMANCE:"
          Write-Host "1. Turn OFF 'Security Layer'"
          Write-Host "2. Color: 16-bit (High Color)"
          Write-Host "3. Resolution: 1280x720"
          Write-Host "4. Turn OFF 'Persistent bitmap caching'"  # S·ª¨A L·ªñI CH√çNH T·∫¢
          Write-Host "5. Turn ON 'Compression'"
          Write-Host "=========================================="

      - name: Monitor Performance
        run: |
          $counter = 0
          while ($true) {
            $counter++
            
            # Ki·ªÉm tra ping m·ªói 5 ph√∫t
            if ($counter % 5 -eq 0) {
              $pingResult = Test-Connection -ComputerName $env:TAILSCALE_IP -Count 3 -Quiet -ErrorAction SilentlyContinue
              Write-Host "[$(Get-Date -Format 'HH:mm:ss')] Performance Check - Ping: $pingResult - Session: $counter minutes"
            } else {
              Write-Host "[$(Get-Date -Format 'HH:mm:ss')] Active - $counter minutes - IP: $env:TAILSCALE_IP"
            }
            
            Start-Sleep -Seconds 60
          }
