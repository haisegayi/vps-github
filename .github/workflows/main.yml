name: RDP Mobile Asia Optimized

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Check Runner Location
        run: |
          Write-Host "🌍 Checking Runner Location..."
          try {
            $locationInfo = Invoke-RestMethod -Uri "http://ipinfo.io/json" -TimeoutSec 10
            Write-Host "📍 Runner Location: $($locationInfo.city), $($locationInfo.region), $($locationInfo.country)"
            Write-Host "🏢 ISP: $($locationInfo.org)"
            Write-Host "📡 IP: $($locationInfo.ip)"
          } catch {
            Write-Host "⚠️ Cannot determine location, but continuing..."
          }

      - name: Configure RDP for Asia Mobile
        run: |
          Write-Host "🎯 Optimizing RDP for Asia region..."
          # Enable Remote Desktop
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
          
          # Asia-optimized settings for high latency
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MaxCompressionLevel" -Value 2 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MinEncryptionLevel" -Value 1 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MaxXResolution" -Value 1280 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MaxYResolution" -Value 720 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "MaxColorDepth" -Value 16 -Force
          
          # Network optimizations for Asia
          Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters' -Name "Tcp1323Opts" -Value 1 -Force
          Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters' -Name "TCPWindowSize" -Value 64240 -Force
          Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters' -Name "DefaultTTL" -Value 64 -Force
          
          # Firewall
          netsh advfirewall firewall delete rule name="RDP" 2>$null
          netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389
          
          Restart-Service -Name TermService -Force
          Write-Host "✅ RDP optimized for Asia region"

      - name: Create Asia Optimized User
        run: |
          # Simple password for mobile
          $password = "Asia@" + (Get-Random -Minimum 1000 -Maximum 9999)
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          
          New-LocalUser -Name "AsiaUser" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "AsiaUser"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "AsiaUser"
          
          "RDP_USER=AsiaUser" | Out-File -FilePath $env:GITHUB_ENV -Append
          "RDP_PASSWORD=$password" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "✅ User AsiaUser created"

      - name: Install Tailscale with Asia DNS
        run: |
          Write-Host "📦 Installing Tailscale with Asia optimization..."
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-latest-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "$installerPath", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force
          Start-Sleep -Seconds 8)

      - name: Setup Asia Optimized Tailscale
        run: |
          Write-Host "🔗 Setting up Tailscale for Asia connectivity..."
          
          # Use Asia-friendly settings
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --login-server=https://login.tailscale.com --accept-routes --hostname=asia-rdp-$env:GITHUB_RUN_ID --advertise-routes=0.0.0.0/0
          
          # Get login URL with QR code
          Start-Sleep -Seconds 5
          Write-Host "🔐 Getting authentication URL..."
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --qr
          
          # Wait for connection with Asia optimization
          $tsIP = $null
          for ($i = 1; $i -le 25; $i++) {
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 2>$null
            if ($tsIP -and $tsIP.StartsWith('100.')) { 
              "TAILSCALE_IP=$tsIP" | Out-File -FilePath $env:GITHUB_ENV -Append
              Write-Host "✅ Tailscale IP: $tsIP"
              
              # Test latency to this IP
              try {
                $ping = Test-Connection -ComputerName $tsIP -Count 2 -Quiet
                Write-Host "📊 Connection test: $ping"
              } catch {
                Write-Host "📊 Connection test: Available"
              }
              break 
            }
            Write-Host "⏳ Waiting for Asia-optimized IP... ($i/25)"
            Start-Sleep -Seconds 2
          }

      - name: Apply Asia Performance Tweaks
        run: |
          Write-Host "⚡ Applying Asia-specific performance tweaks..."
          
          # Disable unnecessary services for better performance
          $services = @("SysMain", "WSearch", "TabletInputService")
          foreach ($service in $services) {
            try {
              Stop-Service -Name $service -Force -ErrorAction SilentlyContinue
              Set-Service -Name $service -StartupType Disabled -ErrorAction SilentlyContinue
            } catch {
              # Ignore errors if service doesn't exist
            }
          }
          
          # Set high performance power plan
          powercfg /setactive 8c5e7fda-e8bf-4a96-9a85-a6e23a8c635c
          
          # Optimize for mobile high-latency connections
          Set-ItemProperty -Path 'HKCU:\Software\Microsoft\Terminal Server Client' -Name "AuthenticationLevel" -Value 0 -Force
          Write-Host "✅ Asia performance optimizations applied"

      - name: Display Asia Optimized Connection
        run: |
          Write-Host ""
          Write-Host "=" * 60
          Write-Host "🎯 ASIA OPTIMIZED RDP - LOW LATENCY"
          Write-Host "=" * 60
          Write-Host "🌐 CONNECTION INFO:"
          Write-Host "   IP: $env:TAILSCALE_IP"
          Write-Host "   User: $env:RDP_USER"
          Write-Host "   Pass: $env:RDP_PASSWORD"
          Write-Host ""
          Write-Host "🔐 AUTHENTICATION:"
          Write-Host "   URL: https://login.tailscale.com/admin/machines"
          Write_Host "   Device: asia-rdp-$env:GITHUB_RUN_ID"
          Write-Host ""
          Write-Host "📱 MOBILE SETTINGS (ASIA OPTIMIZED):"
          Write-Host "   • Turn OFF 'RDP Security Layer'"
          Write-Host "   • Color: 16-bit (High Color)"
          Write-Host "   • Resolution: 1280x720"
          Write-Host "   • Turn ON 'Compression'"
          Write-Host "   • Turn OFF 'Persistent bitmap caching'"
          Write-Host "   • Experience: LAN (10Mbps+)"
          Write-Host ""
          Write-Host "⚡ TIPS FOR BETTER PERFORMANCE:"
          Write-Host "   • Use stable WiFi connection"
          Write-Host "   • Close background apps on phone"
          Write-Host "   • Avoid screen rotation during session"
          Write-Host "=" * 60
          Write-Host ""

      - name: Asia Optimized Session
        run: |
          Write-Host "🚀 Asia-optimized RDP session starting..."
          $startTime = Get-Date
          $lastPingTest = Get-Date
          
          while ($true) {
            $currentTime = Get-Date
            $elapsed = [int](($currentTime - $startTime).TotalMinutes)
            
            # Performance check every 10 minutes
            if (($currentTime - $lastPingTest).TotalMinutes -ge 10) {
              $lastPingTest = $currentTime
              try {
                $pingResult = Test-Connection -ComputerName $env:TAILSCALE_IP -Count 2 -Quiet
                Write-Host "📊 [$(Get-Date -Format 'HH:mm')] Performance Check: Connection $(if($pingResult){'Stable'}else{'Weak'}) - $elapsed minutes"
              } catch {
                Write-Host "📊 [$(Get-Date -Format 'HH:mm')] Performance Check: Testing... - $elapsed minutes"
              }
            }
            
            # Normal status every 3 minutes
            if ($elapsed % 3 -eq 0) {
              $currentIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4 2>$null
              if ($currentIP -and $currentIP -ne $env:TAILSCALE_IP) {
                "TAILSCALE_IP=$currentIP" | Out-File -FilePath $env:GITHUB_ENV -Append
              }
              
              Write-Host "🟢 [$(Get-Date -Format 'HH:mm')] Asia RDP Active - $elapsed minutes"
              Write-Host "   📍 $env:TAILSCALE_IP | 👤 $env:RDP_USER | 🔑 $env:RDP_PASSWORD"
            }
            
            Start-Sleep -Seconds 60
          }
